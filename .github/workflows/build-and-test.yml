name: Build, test, test all examples

on:
  # push:
  pull_request:
    branches: [master, 9.x.x]
  workflow_dispatch:

env:
  GIT_COMMIT: ${{ github.sha }}
  GIT_REF: ${{ github.ref }}
  ENABLE_FEATURE_V4: true
  LOG_LEVEL: info

jobs:
  build-and-test:
    strategy:
      matrix:
        node-version: [16,18,20]
        os: [macos-latest, ubuntu-latest, windows-latest]
        example:
          [
            e2e,
            graphql,
            # jest, # requires jest-pact updating
            messages,
            # mocha, # requires mocha-pact updating
            serverless,
            typescript,
            v3/e2e,
            v3/provider-state-injected,
            v3/run-specific-verifications,
            v3/todo-consumer,
            v3/typescript,
            v4/plugins,
          ]
      fail-fast: false
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      # - name: Fix node-gyp
      #   if: runner.os == 'Windows'
      #   run: |-
      #     npm install --global node-gyp@latest
      #     npm prefix -g | % {npm config set node_gyp "$_\node_modules\node-gyp\bin\node-gyp.js"}
      #   shell: pwsh
      - run: scripts/ci/build-and-test.sh
        shell: bash
        env:
          NODE_VERSION: ${{ matrix.node-version }}
          SKIP_EXAMPLES: true
      - name: run example ${{ matrix.example }}
        run: |
          npm install --ignore-scripts      
          npm test       
        shell: bash
        working-directory: examples/${{ matrix.example }}
        env:
          NODE_VERSION: ${{ matrix.node-version }}
